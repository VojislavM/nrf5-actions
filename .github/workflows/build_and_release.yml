name: Build and release nrf5 application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
#       PATH: /usr/local/gcc-arm-none-eabi-7-2018-q2-update/bin/:${PATH}:/usr/local/nRF5x/nrfjprog:/usr/local/nRF5x/mergehex
      SDK_ROOT: /usr/share/nRF5-SDK/nRF5_SDK_15.3.0_59ac345
      S112_ROOT: /usr/share/S112-SoftDevice/
      S112_IMAGE: /usr/share/S112-SoftDevice/s112_nrf52_6.1.0_softdevice.hex
      BUILD_PLACE: /usr/share/nRF5-SDK/nRF5_SDK_15.3.0_59ac345/examples/ble_peripheral
    
    steps:  
    - name: Check cache for Embedded Arm Toolchain arm-none-eabi-gcc
      id:   cache-toolchain
      uses: actions/cache@v2
      env:
        cache-name: cache-toolchain-7-2018-q2
      with:
        path: ${{ runner.temp }}/arm-none-eabi
        key:  ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install Embedded Arm Toolchain arm-none-eabi-gcc
      if:   steps.cache-toolchain.outputs.cache-hit != 'true'  # Install toolchain if not found in cache
      uses: fiam/arm-none-eabi-gcc@v1.0.2
      with:
        # GNU Embedded Toolchain for Arm release name, in the V-YYYY-qZ format (e.g. "9-2019-q4")
        release: 7-2018-q2
        # Directory to unpack GCC to. Defaults to a temporary directory.
        directory: ${{ runner.temp }}/arm-none-eabi


#     - name: arm-none-eabi-gcc
#       uses: fiam/arm-none-eabi-gcc@v1.0.2
#       with:
#         # GNU Embedded Toolchain for Arm release name, in the V-YYYY-qZ format (e.g. "9-2019-q4")
#         release: 7-2018-q2
#         # Directory to unpack GCC to. Defaults to a temporary directory.
#         directory: /usr/local
     
    - name: install_python
      uses: actions/setup-python@v2
      with:
        python-version: '2.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: install_pip
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          nrfutil
          
    - name: Install zip
      uses: montudor/action-zip@v0.1.1

    - name: install softdevice
      run: | 
        mkdir /usr/share/S112-SoftDevice
        cd /usr/share/S112-SoftDevice
        wget -qO S112-SoftDevice.zip https://www.nordicsemi.com/-/media/Software-and-other-downloads/SoftDevices/S112/s112nrf52611.zip
        unzip S112-SoftDevice.zip
        rm S112-SoftDevice.zip

    - name: install nrf5sdk
      run: |
        mkdir /usr/share/nRF5-SDK
        cd /usr/share/nRF5-SDK
        wget -qO nRF5-SDK.zip https://www.nordicsemi.com/-/media/Software-and-other-downloads/SDKs/nRF5/Binaries/nRF5SDK153059ac345.zip
        unzip nRF5-SDK.zip
        rm nRF5-SDK.zip
         
    - name: install nrfcli
      run: |
        sudo mkdir /usr/local/nRF5x
        cd /usr/local/nRF5x
        wget https://www.nordicsemi.com/-/media/Software-and-other-downloads/Desktop-software/nRF-command-line-tools/sw/Versions-10-x-x/10-11-1/nRFCommandLineTools10111Linuxamd64tar.gz
        tar -xf nRFCommandLineTools10111Linuxamd64tar.gz
        tar -xf nRF-Command-Line-Tools_10_11_1.tar
        rm nRFCommandLineTools10111Linuxamd64tar.gz
     
#      - name: build example
#       working-directory: $BUILD_PLACE/ble_app_beacon
#       run: 
